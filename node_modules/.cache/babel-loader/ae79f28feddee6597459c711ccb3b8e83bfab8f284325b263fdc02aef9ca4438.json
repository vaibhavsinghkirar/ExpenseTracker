{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\react\\\\reactstarter\\\\newapp1\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../ui/Card';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredyear, setfilteryear] = useState('2020');\n  const filterChangeHandler = selectedYear => {\n    setfilteryear(selectedYear);\n  };\n  //create a new array based on the filtered year using filter method\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredyear;\n  });\n  let exepnsesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredyear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expneses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this) : filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        //key matters because it tells react where to add item in a list of item which is imp for performace issues\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"l7QZFXDkh795mrSXhtN9zh7YzLU=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpensesFilter","ExpenseItem","Card","jsxDEV","_jsxDEV","Expenses","props","_s","filteredyear","setfilteryear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","exepnsesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","selected","onChangeFilter","map","title","amount","id","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/react/reactstarter/newapp1/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../ui/Card';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredyear,setfilteryear] = useState('2020')\r\n  const filterChangeHandler = (selectedYear)=>{\r\n    setfilteryear(selectedYear);\r\n  };\r\n  //create a new array based on the filtered year using filter method\r\n  const filteredExpenses = props.items.filter((expense)=>{\r\n    return expense.date.getFullYear().toString()===filteredyear;\r\n  })\r\n\r\n  let exepnsesContent = <p>No expenses found.</p>;\r\n  if(filteredExpenses.length)\r\n  return (\r\n    <div>\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredyear} onChangeFilter={filterChangeHandler}/>\r\n      {/* we can also use and operator  */}\r\n      {filteredExpenses.length===0 ? \r\n        (<p>No expneses found.</p>\r\n        ) : (\r\n          filteredExpenses.map((expense)=> (\r\n            <ExpenseItem\r\n             key={expense.id} //key matters because it tells react where to add item in a list of item which is imp for performace issues\r\n             title={expense.title} \r\n             amount={expense.amount} \r\n             date={expense.date}\r\n            />\r\n      ))\r\n    )}\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAACC,aAAa,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACrD,MAAMW,mBAAmB,GAAIC,YAAY,IAAG;IAC1CF,aAAa,CAACE,YAAY,CAAC;EAC7B,CAAC;EACD;EACA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAG;IACrD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAGV,YAAY;EAC7D,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC/C,IAAGZ,gBAAgB,CAACa,MAAM,EAC1B,oBACErB,OAAA;IAAAgB,QAAA,eACAhB,OAAA,CAACF,IAAI;MAACwB,SAAS,EAAC,UAAU;MAAAN,QAAA,gBACxBhB,OAAA,CAACJ,cAAc;QAAC2B,QAAQ,EAAEnB,YAAa;QAACoB,cAAc,EAAElB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAE7EZ,gBAAgB,CAACa,MAAM,KAAG,CAAC,gBACzBrB,OAAA;QAAAgB,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAExBZ,gBAAgB,CAACiB,GAAG,CAAEd,OAAO,iBAC3BX,OAAA,CAACH,WAAW;QACM;QACjB6B,KAAK,EAAEf,OAAO,CAACe,KAAM;QACrBC,MAAM,EAAEhB,OAAO,CAACgB,MAAO;QACvBf,IAAI,EAAED,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACiB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACN,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAhCKF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}